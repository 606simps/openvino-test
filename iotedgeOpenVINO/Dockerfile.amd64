FROM openvino.azurecr.io/openvino-base:2018.2.319 AS base
RUN apt-get update && \
    apt-get install -y --no-install-recommends software-properties-common && \
    add-apt-repository -y ppa:aziotsdklinux/ppa-azureiot && \
    apt-get update && \
    apt-get install -y azure-iot-sdk-c-dev && \
    rm -rf /var/lib/apt/lists/*

FROM base AS build-env
SHELL ["/bin/bash", "-c"]
RUN apt-get update && \
    apt-get install -y --no-install-recommends cmake gcc g++ make libgflags-dev && \
    rm -rf /var/lib/apt/lists/* 
WORKDIR /app
COPY . ./
ENV INTEL_CVSDK_DIR=/opt/intel/computer_vision_sdk_2018.2.319
ENV OpenCV_DIR=/opt/intel/computer_vision_sdk_2018.2.319/opencv/share/OpenCV
ENV gflags_DIR=/opt/intel/computer_vision_sdk_2018.2.319/inference_engine/samples/build/thirdparty/gflags
ENV InferenceEngine_DIR=/opt/intel/computer_vision_sdk_2018.2.319/deployment_tools/inference_engine/share
ENV PYTHONPATH=/opt/intel/computer_vision_sdk_2018.2.319/python/python2.7:/opt/intel/computer_vision_sdk_2018.2.319/python/python2.7/ubuntu:/opt/intel/computer_vision_sdk_2018.2.319/deployment_tools/model_optimizer:
ENV LD_LIBRARY_PATH=/opt/intel/computer_vision_sdk_2018.2.319/opencv/share/OpenCV/3rdparty/lib:/opt/intel/computer_vision_sdk_2018.2.319/opencv/lib:/opt/intel/opencl:/opt/intel/computer_vision_sdk_2018.2.319/deployment_tools/inference_engine/external/cldnn/lib:/opt/intel/computer_vision_sdk_2018.2.319/deployment_tools/inference_engine/external/gna/lib:/opt/intel/computer_vision_sdk_2018.2.319/deployment_tools/inference_engine/external/mkltiny_lnx/lib:/opt/intel/computer_vision_sdk_2018.2.319/deployment_tools/inference_engine/lib/ubuntu_16.04/intel64:/opt/intel/computer_vision_sdk_2018.2.319/deployment_tools/model_optimizer/model_optimizer_caffe/bin:/opt/intel/computer_vision_sdk_2018.2.319/openvx/lib:
RUN mkdir build
WORKDIR /app/build
RUN cmake .. 
RUN make

FROM base
WORKDIR /app
COPY --from=build-env /app ./
RUN /opt/intel/computer_vision_sdk_2018.2.319/install_dependencies/install_NEO_OCL_driver.sh
RUN useradd -ms /bin/bash moduleuser
RUN usermod -a -G video root
CMD ["./build/intel64/Release/main"]
